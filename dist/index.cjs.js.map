{"version":3,"file":"index.cjs.js","sources":["../src/timer.js","../src/domHelpers.js","../src/createGridComponent.js","../src/VariableSizeGrid.js","../src/createListComponent.js","../src/VariableSizeList.js","../src/FixedSizeGrid.js","../src/FixedSizeList.js","../src/shallowDiffers.js","../src/areEqual.js","../src/shouldComponentUpdate.js"],"sourcesContent":["// @flow\r\n\r\n// Animation frame based implementation of setTimeout.\r\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\r\n\r\nconst hasNativePerformanceNow =\r\n  typeof performance === 'object' && typeof performance.now === 'function';\r\n\r\nconst now = hasNativePerformanceNow\r\n  ? () => performance.now()\r\n  : () => Date.now();\r\n\r\nexport type TimeoutID = {|\r\n  id: AnimationFrameID,\r\n|};\r\n\r\nexport function cancelTimeout(timeoutID: TimeoutID) {\r\n  cancelAnimationFrame(timeoutID.id);\r\n}\r\n\r\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\r\n  const start = now();\r\n\r\n  function tick() {\r\n    if (now() - start >= delay) {\r\n      callback.call(null);\r\n    } else {\r\n      timeoutID.id = requestAnimationFrame(tick);\r\n    }\r\n  }\r\n\r\n  const timeoutID: TimeoutID = {\r\n    id: requestAnimationFrame(tick),\r\n  };\r\n\r\n  return timeoutID;\r\n}\r\n","// @flow\r\n\r\nlet size: number = -1;\r\n\r\n// This utility copied from \"dom-helpers\" package.\r\nexport function getScrollbarSize(recalculate?: boolean = false): number {\r\n  if (size === -1 || recalculate) {\r\n    const div = document.createElement('div');\r\n    const style = div.style;\r\n    style.width = '50px';\r\n    style.height = '50px';\r\n    style.overflow = 'scroll';\r\n\r\n    ((document.body: any): HTMLBodyElement).appendChild(div);\r\n\r\n    size = div.offsetWidth - div.clientWidth;\r\n\r\n    ((document.body: any): HTMLBodyElement).removeChild(div);\r\n  }\r\n\r\n  return size;\r\n}\r\n\r\nexport type RTLOffsetType =\r\n  | 'negative'\r\n  | 'positive-descending'\r\n  | 'positive-ascending';\r\n\r\nlet cachedRTLResult: RTLOffsetType | null = null;\r\n\r\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\r\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\r\n// The safest way to check this is to intentionally set a negative offset,\r\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\r\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\r\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\r\n  if (cachedRTLResult === null || recalculate) {\r\n    const outerDiv = document.createElement('div');\r\n    const outerStyle = outerDiv.style;\r\n    outerStyle.width = '50px';\r\n    outerStyle.height = '50px';\r\n    outerStyle.overflow = 'scroll';\r\n    outerStyle.direction = 'rtl';\r\n\r\n    const innerDiv = document.createElement('div');\r\n    const innerStyle = innerDiv.style;\r\n    innerStyle.width = '100px';\r\n    innerStyle.height = '100px';\r\n\r\n    outerDiv.appendChild(innerDiv);\r\n\r\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\r\n\r\n    if (outerDiv.scrollLeft > 0) {\r\n      cachedRTLResult = 'positive-descending';\r\n    } else {\r\n      outerDiv.scrollLeft = 1;\r\n      if (outerDiv.scrollLeft === 0) {\r\n        cachedRTLResult = 'negative';\r\n      } else {\r\n        cachedRTLResult = 'positive-ascending';\r\n      }\r\n    }\r\n\r\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\r\n\r\n    return cachedRTLResult;\r\n  }\r\n\r\n  return cachedRTLResult;\r\n}\r\n","// @flow\r\n\r\nimport memoizeOne from 'memoize-one';\r\nimport { createElement, PureComponent } from 'react';\r\nimport { cancelTimeout, requestTimeout } from './timer';\r\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\r\n\r\nimport type { TimeoutID } from './timer';\r\n\r\ntype Direction = 'ltr' | 'rtl';\r\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\r\n\r\ntype itemSize = number | ((index: number) => number);\r\n\r\ntype RenderComponentProps<T> = {|\r\n  columnIndex: number,\r\n  data: T,\r\n  isScrolling?: boolean,\r\n  rowIndex: number,\r\n  style: Object,\r\n|};\r\nexport type RenderComponent<T> = React$ComponentType<\r\n  $Shape<RenderComponentProps<T>>\r\n>;\r\n\r\ntype ScrollDirection = 'forward' | 'backward';\r\n\r\ntype OnItemsRenderedCallback = ({\r\n  overscanColumnStartIndex: number,\r\n  overscanColumnStopIndex: number,\r\n  overscanRowStartIndex: number,\r\n  overscanRowStopIndex: number,\r\n  visibleColumnStartIndex: number,\r\n  visibleColumnStopIndex: number,\r\n  visibleRowStartIndex: number,\r\n  visibleRowStopIndex: number,\r\n}) => void;\r\ntype OnScrollCallback = ({\r\n  horizontalScrollDirection: ScrollDirection,\r\n  scrollLeft: number,\r\n  scrollTop: number,\r\n  scrollUpdateWasRequested: boolean,\r\n  verticalScrollDirection: ScrollDirection,\r\n}) => void;\r\n\r\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\r\ntype ItemStyleCache = { [key: string]: Object };\r\n\r\ntype OuterProps = {|\r\n  children: React$Node,\r\n  className: string | void,\r\n  onScroll: ScrollEvent => void,\r\n  style: {\r\n    [string]: mixed,\r\n  },\r\n|};\r\n\r\ntype InnerProps = {|\r\n  children: React$Node,\r\n  style: {\r\n    [string]: mixed,\r\n  },\r\n|};\r\n\r\nexport type Props<T> = {|\r\n  children: RenderComponent<T>,\r\n  className?: string,\r\n  columnCount: number,\r\n  columnWidth: itemSize,\r\n  direction: Direction,\r\n  height: number,\r\n  initialScrollLeft?: number,\r\n  initialScrollTop?: number,\r\n  innerRef?: any,\r\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\r\n  innerTagName?: string, // deprecated\r\n  itemData: T,\r\n  itemKey?: (params: {|\r\n    columnIndex: number,\r\n    data: T,\r\n    rowIndex: number,\r\n  |}) => any,\r\n  onItemsRendered?: OnItemsRenderedCallback,\r\n  onScroll?: OnScrollCallback,\r\n  outerRef?: any,\r\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\r\n  outerTagName?: string, // deprecated\r\n  overscanColumnCount?: number,\r\n  overscanColumnsCount?: number, // deprecated\r\n  overscanCount?: number, // deprecated\r\n  overscanRowCount?: number,\r\n  overscanRowsCount?: number, // deprecated\r\n  rowCount: number,\r\n  rowHeight: itemSize,\r\n  style?: Object,\r\n  useIsScrolling: boolean,\r\n  width: number,\r\n  freezeRowCount?: number,\r\n  freezeColumnCount?: number,\r\n  extraBottomRightElement?: React$Element<any>,\r\n  extraBottomLeftElement?: React$Element<any>,\r\n  extraTopLeftElement?: React$Element<any>,\r\n  extraTopRightElement?: React$Element<any>,\r\n|};\r\ntype State = {|\r\n  instance: any,\r\n  isScrolling: boolean,\r\n  horizontalScrollDirection: ScrollDirection,\r\n  scrollLeft: number,\r\n  scrollTop: number,\r\n  scrollUpdateWasRequested: boolean,\r\n  verticalScrollDirection: ScrollDirection,\r\n|};\r\ntype getItemOffset = (\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: any\r\n) => number;\r\ntype getItemSize = (\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: any\r\n) => number;\r\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\r\ntype GetOffsetForItemAndAlignment = (\r\n  props: Props<any>,\r\n  index: number,\r\n  align: ScrollToAlign,\r\n  scrollOffset: number,\r\n  instanceProps: any,\r\n  scrollbarSize: number\r\n) => number;\r\ntype GetStartIndexForOffset = (\r\n  props: Props<any>,\r\n  offset: number,\r\n  instanceProps: any\r\n) => number;\r\ntype GetStopIndexForStartIndex = (\r\n  props: Props<any>,\r\n  startIndex: number,\r\n  scrollOffset: number,\r\n  instanceProps: any\r\n) => number;\r\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\r\ntype ValidateProps = (props: Props<any>) => void;\r\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\r\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\r\n  `${rowIndex}:${columnIndex}`;\r\n// In DEV mode, this Set helps us only log a warning once per component instance.\r\n// This avoids spamming the console every time a render happens.\r\nlet devWarningsOverscanCount = null;\r\nlet devWarningsOverscanRowsColumnsCount = null;\r\nlet devWarningsTagName = null;\r\nif (process.env.NODE_ENV !== 'production') {\r\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\r\n    devWarningsOverscanCount = new WeakSet();\r\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\r\n    devWarningsTagName = new WeakSet();\r\n  }\r\n}\r\nexport default function createGridComponent({\r\n  getColumnOffset,\r\n  getColumnStartIndexForOffset,\r\n  getColumnStopIndexForStartIndex,\r\n  getColumnWidth,\r\n  getEstimatedTotalHeight,\r\n  getEstimatedTotalWidth,\r\n  getOffsetForColumnAndAlignment,\r\n  getOffsetForRowAndAlignment,\r\n  getRowHeight,\r\n  getRowOffset,\r\n  getRowStartIndexForOffset,\r\n  getRowStopIndexForStartIndex,\r\n  initInstanceProps,\r\n  shouldResetStyleCacheOnItemSizeChange,\r\n  validateProps,\r\n}: {|\r\n  getColumnOffset: getItemOffset,\r\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\r\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\r\n  getColumnWidth: getItemSize,\r\n  getEstimatedTotalHeight: getEstimatedTotalSize,\r\n  getEstimatedTotalWidth: getEstimatedTotalSize,\r\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\r\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\r\n  getRowOffset: getItemOffset,\r\n  getRowHeight: getItemSize,\r\n  getRowStartIndexForOffset: GetStartIndexForOffset,\r\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\r\n  initInstanceProps: InitInstanceProps,\r\n  shouldResetStyleCacheOnItemSizeChange: boolean,\r\n  validateProps: ValidateProps,\r\n|}) {\r\n  return class Grid<T> extends PureComponent<Props<T>, State> {\r\n    _instanceProps: any = initInstanceProps(this.props, this);\r\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\r\n    _outerRef: ?HTMLDivElement;\r\n    static defaultProps = {\r\n      direction: 'ltr',\r\n      itemData: undefined,\r\n      useIsScrolling: false,\r\n    };\r\n    state: State = {\r\n      instance: this,\r\n      isScrolling: false,\r\n      horizontalScrollDirection: 'forward',\r\n      scrollLeft:\r\n        typeof this.props.initialScrollLeft === 'number'\r\n          ? this.props.initialScrollLeft\r\n          : 0,\r\n      scrollTop:\r\n        typeof this.props.initialScrollTop === 'number'\r\n          ? this.props.initialScrollTop\r\n          : 0,\r\n      scrollUpdateWasRequested: false,\r\n      verticalScrollDirection: 'forward',\r\n    };\r\n    // Always use explicit constructor for React components.\r\n    // It produces less code after transpilation. (#26)\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props: Props<T>) {\r\n      super(props);\r\n    }\r\n    static getDerivedStateFromProps(\r\n      nextProps: Props<T>,\r\n      prevState: State\r\n    ): $Shape<State> | null {\r\n      validateSharedProps(nextProps, prevState);\r\n      validateProps(nextProps);\r\n      return null;\r\n    }\r\n    scrollTo({\r\n      scrollLeft,\r\n      scrollTop,\r\n    }: {\r\n      scrollLeft: number,\r\n      scrollTop: number,\r\n    }): void {\r\n      if (scrollLeft !== undefined) {\r\n        scrollLeft = Math.max(0, scrollLeft);\r\n      }\r\n      if (scrollTop !== undefined) {\r\n        scrollTop = Math.max(0, scrollTop);\r\n      }\r\n      this.setState(prevState => {\r\n        if (scrollLeft === undefined) {\r\n          scrollLeft = prevState.scrollLeft;\r\n        }\r\n        if (scrollTop === undefined) {\r\n          scrollTop = prevState.scrollTop;\r\n        }\r\n        if (\r\n          prevState.scrollLeft === scrollLeft &&\r\n          prevState.scrollTop === scrollTop\r\n        ) {\r\n          return null;\r\n        }\r\n        return {\r\n          horizontalScrollDirection:\r\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\r\n          scrollLeft: scrollLeft,\r\n          scrollTop: scrollTop,\r\n          scrollUpdateWasRequested: true,\r\n          verticalScrollDirection:\r\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\r\n        };\r\n      }, this._resetIsScrollingDebounced);\r\n    }\r\n    scrollToItem({\r\n      align = 'auto',\r\n      columnIndex,\r\n      rowIndex,\r\n    }: {\r\n      align: ScrollToAlign,\r\n      columnIndex?: number,\r\n      rowIndex?: number,\r\n    }): void {\r\n      const { columnCount, height, rowCount, width } = this.props;\r\n      const { scrollLeft, scrollTop } = this.state;\r\n      const scrollbarSize = getScrollbarSize();\r\n      if (columnIndex !== undefined) {\r\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\r\n      }\r\n      if (rowIndex !== undefined) {\r\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\r\n      }\r\n      const estimatedTotalHeight = getEstimatedTotalHeight(\r\n        this.props,\r\n        this._instanceProps\r\n      );\r\n      const estimatedTotalWidth = getEstimatedTotalWidth(\r\n        this.props,\r\n        this._instanceProps\r\n      );\r\n      // The scrollbar size should be considered when scrolling an item into view,\r\n      // to ensure it's fully visible.\r\n      // But we only need to account for its size when it's actually visible.\r\n      const horizontalScrollbarSize =\r\n        estimatedTotalWidth > width ? scrollbarSize : 0;\r\n      const verticalScrollbarSize =\r\n        estimatedTotalHeight > height ? scrollbarSize : 0;\r\n      this.scrollTo({\r\n        scrollLeft:\r\n          columnIndex !== undefined\r\n            ? getOffsetForColumnAndAlignment(\r\n                this.props,\r\n                columnIndex,\r\n                align,\r\n                scrollLeft,\r\n                this._instanceProps,\r\n                verticalScrollbarSize\r\n              )\r\n            : scrollLeft,\r\n        scrollTop:\r\n          rowIndex !== undefined\r\n            ? getOffsetForRowAndAlignment(\r\n                this.props,\r\n                rowIndex,\r\n                align,\r\n                scrollTop,\r\n                this._instanceProps,\r\n                horizontalScrollbarSize\r\n              )\r\n            : scrollTop,\r\n      });\r\n    }\r\n    componentDidMount() {\r\n      const { initialScrollLeft, initialScrollTop } = this.props;\r\n      if (this._outerRef != null) {\r\n        const outerRef = ((this._outerRef: any): HTMLElement);\r\n        if (typeof initialScrollLeft === 'number') {\r\n          outerRef.scrollLeft = initialScrollLeft;\r\n        }\r\n        if (typeof initialScrollTop === 'number') {\r\n          outerRef.scrollTop = initialScrollTop;\r\n        }\r\n      }\r\n      this._callPropsCallbacks();\r\n    }\r\n    componentDidUpdate() {\r\n      const { direction } = this.props;\r\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\r\n      if (scrollUpdateWasRequested && this._outerRef != null) {\r\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\r\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\r\n        const outerRef = ((this._outerRef: any): HTMLElement);\r\n        if (direction === 'rtl') {\r\n          const isNegative = isRTLOffsetNegative();\r\n          if (isNegative) {\r\n            outerRef.scrollLeft = -scrollLeft;\r\n          } else {\r\n            const { clientWidth, scrollWidth } = outerRef;\r\n            outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\r\n          }\r\n        } else {\r\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\r\n        }\r\n        outerRef.scrollTop = Math.max(0, scrollTop);\r\n      }\r\n      this._callPropsCallbacks();\r\n    }\r\n    componentWillUnmount() {\r\n      if (this._resetIsScrollingTimeoutId !== null) {\r\n        cancelTimeout(this._resetIsScrollingTimeoutId);\r\n      }\r\n    }\r\n    render() {\r\n      const {\r\n        children,\r\n        className,\r\n        columnCount,\r\n        direction,\r\n        height,\r\n        innerRef,\r\n        innerElementType,\r\n        innerTagName,\r\n        itemData,\r\n        itemKey = defaultItemKey,\r\n        outerElementType,\r\n        outerTagName,\r\n        rowCount,\r\n        style,\r\n        useIsScrolling,\r\n        width,\r\n        extraBottomRightElement,\r\n        extraBottomLeftElement,\r\n        extraTopLeftElement,\r\n        extraTopRightElement,\r\n      } = this.props;\r\n      const freezeRowCount = this.props.freezeRowCount || 0;\r\n      const freezeColumnCount = this.props.freezeColumnCount || 0;\r\n      const { isScrolling } = this.state;\r\n      const [\r\n        columnStartIndex,\r\n        columnStopIndex,\r\n      ] = this._getHorizontalRangeToRender();\r\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\r\n      const items = [];\r\n      const freezeTopLeftItems = [];\r\n      const freezeTopRightItems = [];\r\n      const freezeBottomLeftItems = [];\r\n      if (columnCount > 0 && rowCount) {\r\n        for (\r\n          let rowIndex = Math.max(freezeRowCount, rowStartIndex);\r\n          rowIndex <= rowStopIndex;\r\n          rowIndex++\r\n        ) {\r\n          for (\r\n            let columnIndex = Math.max(freezeColumnCount, columnStartIndex);\r\n            columnIndex <= columnStopIndex;\r\n            columnIndex++\r\n          ) {\r\n            items.push(\r\n              createElement(children, {\r\n                columnIndex,\r\n                data: itemData,\r\n                isScrolling: useIsScrolling ? isScrolling : undefined,\r\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\r\n                rowIndex,\r\n                style: this._getItemStyle(rowIndex, columnIndex),\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n      // freeze row (top-right pane)\r\n      if (freezeRowCount) {\r\n        for (let rowIndex = 0; rowIndex < freezeRowCount; rowIndex++) {\r\n          for (\r\n            let columnIndex = Math.max(freezeColumnCount, columnStartIndex);\r\n            columnIndex <= columnStopIndex;\r\n            columnIndex++\r\n          ) {\r\n            freezeTopRightItems.push(\r\n              createElement(children, {\r\n                columnIndex,\r\n                data: itemData,\r\n                isScrolling: useIsScrolling ? isScrolling : undefined,\r\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\r\n                rowIndex,\r\n                style: this._getItemStyle(rowIndex, columnIndex),\r\n              })\r\n            );\r\n          }\r\n        }\r\n        if (extraTopRightElement)\r\n          freezeTopRightItems.push(extraTopRightElement);\r\n      }\r\n      // freeze column (bottom-left pane)\r\n      if (freezeColumnCount) {\r\n        const topLeftStyle = this._getItemStyle(\r\n          freezeRowCount,\r\n          freezeColumnCount\r\n        );\r\n        for (\r\n          let rowIndex = Math.max(freezeRowCount, rowStartIndex);\r\n          rowIndex <= rowStopIndex;\r\n          rowIndex++\r\n        ) {\r\n          for (\r\n            let columnIndex = 0;\r\n            columnIndex < freezeColumnCount;\r\n            columnIndex++\r\n          ) {\r\n            let style = Object.assign(\r\n              {},\r\n              this._getItemStyle(rowIndex, columnIndex)\r\n            );\r\n            style.top -= topLeftStyle.top;\r\n            freezeBottomLeftItems.push(\r\n              createElement(children, {\r\n                columnIndex,\r\n                data: itemData,\r\n                isScrolling: useIsScrolling ? isScrolling : undefined,\r\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\r\n                rowIndex,\r\n                style,\r\n              })\r\n            );\r\n          }\r\n        }\r\n        if (extraBottomLeftElement)\r\n          freezeBottomLeftItems.push(extraBottomLeftElement);\r\n      }\r\n      // freeze top-left pane\r\n      if (freezeColumnCount && freezeRowCount) {\r\n        for (let rowIndex = 0; rowIndex < freezeRowCount; rowIndex++) {\r\n          for (\r\n            let columnIndex = 0;\r\n            columnIndex < freezeColumnCount;\r\n            columnIndex++\r\n          ) {\r\n            freezeTopLeftItems.push(\r\n              createElement(children, {\r\n                columnIndex,\r\n                data: itemData,\r\n                isScrolling: useIsScrolling ? isScrolling : undefined,\r\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\r\n                rowIndex,\r\n                style: this._getItemStyle(rowIndex, columnIndex),\r\n              })\r\n            );\r\n          }\r\n        }\r\n        if (extraTopLeftElement) freezeTopLeftItems.push(extraTopLeftElement);\r\n      }\r\n      // Read this value AFTER items have been created,\r\n      // So their actual sizes (if variable) are taken into consideration.\r\n      const estimatedTotalHeight = getEstimatedTotalHeight(\r\n        this.props,\r\n        this._instanceProps\r\n      );\r\n      const estimatedTotalWidth = getEstimatedTotalWidth(\r\n        this.props,\r\n        this._instanceProps\r\n      );\r\n      if (freezeBottomLeftItems.length) {\r\n        const topLeftStyle = this._getItemStyle(\r\n          freezeRowCount,\r\n          freezeColumnCount\r\n        );\r\n        items.unshift(\r\n          createElement('div', {\r\n            children: freezeBottomLeftItems,\r\n            key: 'bottom-left-pane',\r\n            style: {\r\n              height: estimatedTotalHeight,\r\n              width: topLeftStyle.left,\r\n              position: 'sticky',\r\n              left: 0,\r\n              zIndex: 100000,\r\n              // transform: `translateY(-${topLeftStyle.top}px)`,\r\n              background: 'rgb(255, 255, 255)',\r\n            },\r\n          })\r\n        );\r\n      }\r\n      if (freezeTopRightItems.length) {\r\n        // top-left cell in the bottom-right pane\r\n        const topLeftStyle = this._getItemStyle(\r\n          freezeRowCount,\r\n          freezeColumnCount\r\n        );\r\n        items.unshift(\r\n          createElement('div', {\r\n            children: freezeTopRightItems,\r\n            key: 'top-right-pane',\r\n            style: {\r\n              height: topLeftStyle.top,\r\n              width: estimatedTotalWidth,\r\n              position: 'sticky',\r\n              top: 0,\r\n              zIndex: 100000,\r\n              background: 'rgb(255, 255, 255)',\r\n            },\r\n          })\r\n        );\r\n      }\r\n      const outerElement = createElement(\r\n        outerElementType || outerTagName || 'div',\r\n        {\r\n          className,\r\n          onScroll: this._onScroll,\r\n          ref: this._outerRefSetter,\r\n          key: 'outer-element',\r\n          style: {\r\n            position: 'relative',\r\n            height,\r\n            width,\r\n            overflow: 'auto',\r\n            WebkitOverflowScrolling: 'touch',\r\n            willChange: 'transform',\r\n            direction,\r\n            ...style,\r\n          },\r\n        },\r\n        createElement(innerElementType || innerTagName || 'div', {\r\n          children: items,\r\n          ref: innerRef,\r\n          style: {\r\n            height: estimatedTotalHeight,\r\n            pointerEvents: isScrolling ? 'none' : undefined,\r\n            width: estimatedTotalWidth,\r\n          },\r\n        }),\r\n        extraBottomRightElement\r\n      );\r\n      if (freezeTopLeftItems.length) {\r\n        const topLeftStyle = this._getItemStyle(\r\n          freezeRowCount,\r\n          freezeColumnCount\r\n        );\r\n        return [\r\n          createElement('div', {\r\n            children: freezeTopLeftItems,\r\n            key: 'top-left-pane',\r\n            style: {\r\n              height: topLeftStyle.top,\r\n              width: topLeftStyle.left,\r\n              position: 'absolute',\r\n              zIndex: 100,\r\n              background: 'rgb(255, 255, 255)',\r\n            },\r\n          }),\r\n          outerElement,\r\n        ];\r\n      }\r\n      return outerElement;\r\n    }\r\n\r\n    _callOnItemsRendered: (\r\n      overscanColumnStartIndex: number,\r\n      overscanColumnStopIndex: number,\r\n      overscanRowStartIndex: number,\r\n      overscanRowStopIndex: number,\r\n      visibleColumnStartIndex: number,\r\n      visibleColumnStopIndex: number,\r\n      visibleRowStartIndex: number,\r\n      visibleRowStopIndex: number\r\n    ) => void;\r\n    _callOnItemsRendered = memoizeOne(\r\n      (\r\n        overscanColumnStartIndex: number,\r\n        overscanColumnStopIndex: number,\r\n        overscanRowStartIndex: number,\r\n        overscanRowStopIndex: number,\r\n        visibleColumnStartIndex: number,\r\n        visibleColumnStopIndex: number,\r\n        visibleRowStartIndex: number,\r\n        visibleRowStopIndex: number\r\n      ) =>\r\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\r\n          overscanColumnStartIndex,\r\n          overscanColumnStopIndex,\r\n          overscanRowStartIndex,\r\n          overscanRowStopIndex,\r\n          visibleColumnStartIndex,\r\n          visibleColumnStopIndex,\r\n          visibleRowStartIndex,\r\n          visibleRowStopIndex,\r\n        })\r\n    );\r\n\r\n    _callOnScroll: (\r\n      scrollLeft: number,\r\n      scrollTop: number,\r\n      horizontalScrollDirection: ScrollDirection,\r\n      verticalScrollDirection: ScrollDirection,\r\n      scrollUpdateWasRequested: boolean\r\n    ) => void;\r\n    _callOnScroll = memoizeOne(\r\n      (\r\n        scrollLeft: number,\r\n        scrollTop: number,\r\n        horizontalScrollDirection: ScrollDirection,\r\n        verticalScrollDirection: ScrollDirection,\r\n        scrollUpdateWasRequested: boolean\r\n      ) =>\r\n        ((this.props.onScroll: any): OnScrollCallback)({\r\n          horizontalScrollDirection,\r\n          scrollLeft,\r\n          scrollTop,\r\n          verticalScrollDirection,\r\n          scrollUpdateWasRequested,\r\n        })\r\n    );\r\n\r\n    _callPropsCallbacks() {\r\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\r\n\r\n      if (typeof onItemsRendered === 'function') {\r\n        if (columnCount > 0 && rowCount > 0) {\r\n          const [\r\n            overscanColumnStartIndex,\r\n            overscanColumnStopIndex,\r\n            visibleColumnStartIndex,\r\n            visibleColumnStopIndex,\r\n          ] = this._getHorizontalRangeToRender();\r\n          const [\r\n            overscanRowStartIndex,\r\n            overscanRowStopIndex,\r\n            visibleRowStartIndex,\r\n            visibleRowStopIndex,\r\n          ] = this._getVerticalRangeToRender();\r\n          this._callOnItemsRendered(\r\n            overscanColumnStartIndex,\r\n            overscanColumnStopIndex,\r\n            overscanRowStartIndex,\r\n            overscanRowStopIndex,\r\n            visibleColumnStartIndex,\r\n            visibleColumnStopIndex,\r\n            visibleRowStartIndex,\r\n            visibleRowStopIndex\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeof onScroll === 'function') {\r\n        const {\r\n          horizontalScrollDirection,\r\n          scrollLeft,\r\n          scrollTop,\r\n          scrollUpdateWasRequested,\r\n          verticalScrollDirection,\r\n        } = this.state;\r\n        this._callOnScroll(\r\n          scrollLeft,\r\n          scrollTop,\r\n          horizontalScrollDirection,\r\n          verticalScrollDirection,\r\n          scrollUpdateWasRequested\r\n        );\r\n      }\r\n    }\r\n\r\n    // Lazily create and cache item styles while scrolling,\r\n    // So that pure component sCU will prevent re-renders.\r\n    // We maintain this cache, and pass a style prop rather than index,\r\n    // So that List can clear cached styles and force item re-render if necessary.\r\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\r\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\r\n      const { columnWidth, direction, rowHeight } = this.props;\r\n\r\n      const itemStyleCache = this._getItemStyleCache(\r\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\r\n        shouldResetStyleCacheOnItemSizeChange && direction,\r\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\r\n      );\r\n\r\n      const key = `${rowIndex}:${columnIndex}`;\r\n\r\n      let style;\r\n      if (itemStyleCache.hasOwnProperty(key)) {\r\n        style = itemStyleCache[key];\r\n      } else {\r\n        const offset = getColumnOffset(\r\n          this.props,\r\n          columnIndex,\r\n          this._instanceProps\r\n        );\r\n        const isRtl = direction === 'rtl';\r\n        itemStyleCache[key] = style = {\r\n          position: 'absolute',\r\n          left: isRtl ? undefined : offset,\r\n          right: isRtl ? offset : undefined,\r\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\r\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\r\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\r\n        };\r\n      }\r\n\r\n      return style;\r\n    };\r\n\r\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\r\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\r\n\r\n    _getHorizontalRangeToRender(): [number, number, number, number] {\r\n      const {\r\n        columnCount,\r\n        overscanColumnCount,\r\n        overscanColumnsCount,\r\n        overscanCount,\r\n        rowCount,\r\n      } = this.props;\r\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\r\n\r\n      const overscanCountResolved: number =\r\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\r\n\r\n      if (columnCount === 0 || rowCount === 0) {\r\n        return [0, 0, 0, 0];\r\n      }\r\n\r\n      const startIndex = getColumnStartIndexForOffset(\r\n        this.props,\r\n        scrollLeft,\r\n        this._instanceProps\r\n      );\r\n      const stopIndex = getColumnStopIndexForStartIndex(\r\n        this.props,\r\n        startIndex,\r\n        scrollLeft,\r\n        this._instanceProps\r\n      );\r\n\r\n      // Overscan by one item in each direction so that tab/focus works.\r\n      // If there isn't at least one extra item, tab loops back around.\r\n      const overscanBackward =\r\n        !isScrolling || horizontalScrollDirection === 'backward'\r\n          ? Math.max(1, overscanCountResolved)\r\n          : 1;\r\n      const overscanForward =\r\n        !isScrolling || horizontalScrollDirection === 'forward'\r\n          ? Math.max(1, overscanCountResolved)\r\n          : 1;\r\n\r\n      return [\r\n        Math.max(0, startIndex - overscanBackward),\r\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\r\n        startIndex,\r\n        stopIndex,\r\n      ];\r\n    }\r\n\r\n    _getVerticalRangeToRender(): [number, number, number, number] {\r\n      const {\r\n        columnCount,\r\n        overscanCount,\r\n        overscanRowCount,\r\n        overscanRowsCount,\r\n        rowCount,\r\n      } = this.props;\r\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\r\n\r\n      const overscanCountResolved: number =\r\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\r\n\r\n      if (columnCount === 0 || rowCount === 0) {\r\n        return [0, 0, 0, 0];\r\n      }\r\n\r\n      const startIndex = getRowStartIndexForOffset(\r\n        this.props,\r\n        scrollTop,\r\n        this._instanceProps\r\n      );\r\n      const stopIndex = getRowStopIndexForStartIndex(\r\n        this.props,\r\n        startIndex,\r\n        scrollTop,\r\n        this._instanceProps\r\n      );\r\n\r\n      // Overscan by one item in each direction so that tab/focus works.\r\n      // If there isn't at least one extra item, tab loops back around.\r\n      const overscanBackward =\r\n        !isScrolling || verticalScrollDirection === 'backward'\r\n          ? Math.max(1, overscanCountResolved)\r\n          : 1;\r\n      const overscanForward =\r\n        !isScrolling || verticalScrollDirection === 'forward'\r\n          ? Math.max(1, overscanCountResolved)\r\n          : 1;\r\n\r\n      return [\r\n        Math.max(0, startIndex - overscanBackward),\r\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\r\n        startIndex,\r\n        stopIndex,\r\n      ];\r\n    }\r\n\r\n    _onScroll = (event: ScrollEvent): void => {\r\n      const {\r\n        clientHeight,\r\n        clientWidth,\r\n        scrollLeft,\r\n        scrollTop,\r\n        scrollHeight,\r\n        scrollWidth,\r\n      } = event.currentTarget;\r\n      this.setState(prevState => {\r\n        if (\r\n          prevState.scrollLeft === scrollLeft &&\r\n          prevState.scrollTop === scrollTop\r\n        ) {\r\n          // Scroll position may have been updated by cDM/cDU,\r\n          // In which case we don't need to trigger another render,\r\n          // And we don't want to update state.isScrolling.\r\n          return null;\r\n        }\r\n\r\n        const { direction } = this.props;\r\n\r\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\r\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\r\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\r\n        let calculatedScrollLeft = scrollLeft;\r\n        if (direction === 'rtl') {\r\n          switch (getRTLOffsetType()) {\r\n            case 'negative':\r\n              calculatedScrollLeft = -scrollLeft;\r\n              break;\r\n            case 'positive-descending':\r\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\r\n              break;\r\n          }\r\n        }\r\n\r\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\r\n        calculatedScrollLeft = Math.max(\r\n          0,\r\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\r\n        );\r\n        const calculatedScrollTop = Math.max(\r\n          0,\r\n          Math.min(scrollTop, scrollHeight - clientHeight)\r\n        );\r\n\r\n        return {\r\n          isScrolling: true,\r\n          horizontalScrollDirection:\r\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\r\n          scrollLeft: calculatedScrollLeft,\r\n          scrollTop: calculatedScrollTop,\r\n          verticalScrollDirection:\r\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\r\n          scrollUpdateWasRequested: false,\r\n        };\r\n      }, this._resetIsScrollingDebounced);\r\n    };\r\n\r\n    _outerRefSetter = (ref: any): void => {\r\n      const { outerRef } = this.props;\r\n\r\n      this._outerRef = ((ref: any): HTMLDivElement);\r\n\r\n      if (typeof outerRef === 'function') {\r\n        outerRef(ref);\r\n      } else if (\r\n        outerRef != null &&\r\n        typeof outerRef === 'object' &&\r\n        outerRef.hasOwnProperty('current')\r\n      ) {\r\n        outerRef.current = ref;\r\n      }\r\n    };\r\n\r\n    _resetIsScrollingDebounced = () => {\r\n      if (this._resetIsScrollingTimeoutId !== null) {\r\n        cancelTimeout(this._resetIsScrollingTimeoutId);\r\n      }\r\n\r\n      this._resetIsScrollingTimeoutId = requestTimeout(\r\n        this._resetIsScrolling,\r\n        IS_SCROLLING_DEBOUNCE_INTERVAL\r\n      );\r\n    };\r\n\r\n    _resetIsScrolling = () => {\r\n      this._resetIsScrollingTimeoutId = null;\r\n\r\n      this.setState({ isScrolling: false }, () => {\r\n        // Clear style cache after state update has been committed.\r\n        // This way we don't break pure sCU for items that don't use isScrolling param.\r\n        this._getItemStyleCache(-1);\r\n      });\r\n    };\r\n  };\r\n}\r\n\r\nconst validateSharedProps = (\r\n  {\r\n    children,\r\n    direction,\r\n    height,\r\n    innerTagName,\r\n    outerTagName,\r\n    overscanColumnsCount,\r\n    overscanCount,\r\n    overscanRowsCount,\r\n    width,\r\n  }: Props<any>,\r\n  { instance }: State\r\n): void => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (typeof overscanCount === 'number') {\r\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\r\n        devWarningsOverscanCount.add(instance);\r\n        console.warn(\r\n          'The overscanCount prop has been deprecated. ' +\r\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\r\n        );\r\n      }\r\n    }\r\n\r\n    if (\r\n      typeof overscanColumnsCount === 'number' ||\r\n      typeof overscanRowsCount === 'number'\r\n    ) {\r\n      if (\r\n        devWarningsOverscanRowsColumnsCount &&\r\n        !devWarningsOverscanRowsColumnsCount.has(instance)\r\n      ) {\r\n        devWarningsOverscanRowsColumnsCount.add(instance);\r\n        console.warn(\r\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\r\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\r\n        );\r\n      }\r\n    }\r\n\r\n    if (innerTagName != null || outerTagName != null) {\r\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\r\n        devWarningsTagName.add(instance);\r\n        console.warn(\r\n          'The innerTagName and outerTagName props have been deprecated. ' +\r\n            'Please use the innerElementType and outerElementType props instead.'\r\n        );\r\n      }\r\n    }\r\n\r\n    if (children == null) {\r\n      throw Error(\r\n        'An invalid \"children\" prop has been specified. ' +\r\n          'Value should be a React component. ' +\r\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\r\n      );\r\n    }\r\n\r\n    switch (direction) {\r\n      case 'ltr':\r\n      case 'rtl':\r\n        // Valid values\r\n        break;\r\n      default:\r\n        throw Error(\r\n          'An invalid \"direction\" prop has been specified. ' +\r\n            'Value should be either \"ltr\" or \"rtl\". ' +\r\n            `\"${direction}\" was specified.`\r\n        );\r\n    }\r\n\r\n    if (typeof width !== 'number') {\r\n      throw Error(\r\n        'An invalid \"width\" prop has been specified. ' +\r\n          'Grids must specify a number for width. ' +\r\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\r\n      );\r\n    }\r\n\r\n    if (typeof height !== 'number') {\r\n      throw Error(\r\n        'An invalid \"height\" prop has been specified. ' +\r\n          'Grids must specify a number for height. ' +\r\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\r\n      );\r\n    }\r\n  }\r\n};\r\n","// @flow\r\n\r\nimport createGridComponent from './createGridComponent';\r\n\r\nimport type { Props, ScrollToAlign } from './createGridComponent';\r\n\r\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\r\n\r\ntype VariableSizeProps = {|\r\n  estimatedColumnWidth: number,\r\n  estimatedRowHeight: number,\r\n  ...Props<any>,\r\n|};\r\n\r\ntype itemSizeGetter = (index: number) => number;\r\ntype ItemType = 'column' | 'row';\r\n\r\ntype ItemMetadata = {|\r\n  offset: number,\r\n  size: number,\r\n|};\r\ntype ItemMetadataMap = { [index: number]: ItemMetadata };\r\ntype InstanceProps = {|\r\n  columnMetadataMap: ItemMetadataMap,\r\n  estimatedColumnWidth: number,\r\n  estimatedRowHeight: number,\r\n  lastMeasuredColumnIndex: number,\r\n  lastMeasuredRowIndex: number,\r\n  rowMetadataMap: ItemMetadataMap,\r\n|};\r\n\r\nconst getEstimatedTotalHeight = (\r\n  { rowCount }: Props<any>,\r\n  { rowMetadataMap, estimatedRowHeight, lastMeasuredRowIndex }: InstanceProps\r\n) => {\r\n  let totalSizeOfMeasuredRows = 0;\r\n\r\n  // Edge case check for when the number of items decreases while a scroll is in progress.\r\n  // https://github.com/bvaughn/react-window/pull/138\r\n  if (lastMeasuredRowIndex >= rowCount) {\r\n    lastMeasuredRowIndex = rowCount - 1;\r\n  }\r\n\r\n  if (lastMeasuredRowIndex >= 0) {\r\n    const itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\r\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\r\n  }\r\n\r\n  const numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\r\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\r\n\r\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\r\n};\r\n\r\nconst getEstimatedTotalWidth = (\r\n  { columnCount }: Props<any>,\r\n  {\r\n    columnMetadataMap,\r\n    estimatedColumnWidth,\r\n    lastMeasuredColumnIndex,\r\n  }: InstanceProps\r\n) => {\r\n  let totalSizeOfMeasuredRows = 0;\r\n\r\n  // Edge case check for when the number of items decreases while a scroll is in progress.\r\n  // https://github.com/bvaughn/react-window/pull/138\r\n  if (lastMeasuredColumnIndex >= columnCount) {\r\n    lastMeasuredColumnIndex = columnCount - 1;\r\n  }\r\n\r\n  if (lastMeasuredColumnIndex >= 0) {\r\n    const itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\r\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\r\n  }\r\n\r\n  const numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\r\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\r\n\r\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\r\n};\r\n\r\nconst getItemMetadata = (\r\n  itemType: ItemType,\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: InstanceProps\r\n): ItemMetadata => {\r\n  let itemMetadataMap, itemSize, lastMeasuredIndex;\r\n  if (itemType === 'column') {\r\n    itemMetadataMap = instanceProps.columnMetadataMap;\r\n    itemSize = ((props.columnWidth: any): itemSizeGetter);\r\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\r\n  } else {\r\n    itemMetadataMap = instanceProps.rowMetadataMap;\r\n    itemSize = ((props.rowHeight: any): itemSizeGetter);\r\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\r\n  }\r\n\r\n  if (index > lastMeasuredIndex) {\r\n    let offset = 0;\r\n    if (lastMeasuredIndex >= 0) {\r\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\r\n      offset = itemMetadata.offset + itemMetadata.size;\r\n    }\r\n\r\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\r\n      let size = itemSize(i);\r\n\r\n      itemMetadataMap[i] = {\r\n        offset,\r\n        size,\r\n      };\r\n\r\n      offset += size;\r\n    }\r\n\r\n    if (itemType === 'column') {\r\n      instanceProps.lastMeasuredColumnIndex = index;\r\n    } else {\r\n      instanceProps.lastMeasuredRowIndex = index;\r\n    }\r\n  }\r\n\r\n  return itemMetadataMap[index];\r\n};\r\n\r\nconst findNearestItem = (\r\n  itemType: ItemType,\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  offset: number\r\n) => {\r\n  let itemMetadataMap, lastMeasuredIndex;\r\n  if (itemType === 'column') {\r\n    itemMetadataMap = instanceProps.columnMetadataMap;\r\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\r\n  } else {\r\n    itemMetadataMap = instanceProps.rowMetadataMap;\r\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\r\n  }\r\n\r\n  const lastMeasuredItemOffset =\r\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\r\n\r\n  if (lastMeasuredItemOffset >= offset) {\r\n    // If we've already measured items within this range just use a binary search as it's faster.\r\n    return findNearestItemBinarySearch(\r\n      itemType,\r\n      props,\r\n      instanceProps,\r\n      lastMeasuredIndex,\r\n      0,\r\n      offset\r\n    );\r\n  } else {\r\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\r\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\r\n    // The overall complexity for this approach is O(log n).\r\n    return findNearestItemExponentialSearch(\r\n      itemType,\r\n      props,\r\n      instanceProps,\r\n      Math.max(0, lastMeasuredIndex),\r\n      offset\r\n    );\r\n  }\r\n};\r\n\r\nconst findNearestItemBinarySearch = (\r\n  itemType: ItemType,\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  high: number,\r\n  low: number,\r\n  offset: number\r\n): number => {\r\n  while (low <= high) {\r\n    const middle = low + Math.floor((high - low) / 2);\r\n    const currentOffset = getItemMetadata(\r\n      itemType,\r\n      props,\r\n      middle,\r\n      instanceProps\r\n    ).offset;\r\n\r\n    if (currentOffset === offset) {\r\n      return middle;\r\n    } else if (currentOffset < offset) {\r\n      low = middle + 1;\r\n    } else if (currentOffset > offset) {\r\n      high = middle - 1;\r\n    }\r\n  }\r\n\r\n  if (low > 0) {\r\n    return low - 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nconst findNearestItemExponentialSearch = (\r\n  itemType: ItemType,\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  index: number,\r\n  offset: number\r\n): number => {\r\n  const itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\r\n  let interval = 1;\r\n\r\n  while (\r\n    index < itemCount &&\r\n    getItemMetadata(itemType, props, index, instanceProps).offset < offset\r\n  ) {\r\n    index += interval;\r\n    interval *= 2;\r\n  }\r\n\r\n  return findNearestItemBinarySearch(\r\n    itemType,\r\n    props,\r\n    instanceProps,\r\n    Math.min(index, itemCount - 1),\r\n    Math.floor(index / 2),\r\n    offset\r\n  );\r\n};\r\n\r\nconst getOffsetForIndexAndAlignment = (\r\n  itemType: ItemType,\r\n  props: Props<any>,\r\n  index: number,\r\n  align: ScrollToAlign,\r\n  scrollOffset: number,\r\n  instanceProps: InstanceProps,\r\n  scrollbarSize: number\r\n): number => {\r\n  const size = itemType === 'column' ? props.width : props.height;\r\n  const itemMetadata = getItemMetadata(itemType, props, index, instanceProps);\r\n\r\n  // Get estimated total size after ItemMetadata is computed,\r\n  // To ensure it reflects actual measurements instead of just estimates.\r\n  const estimatedTotalSize =\r\n    itemType === 'column'\r\n      ? getEstimatedTotalWidth(props, instanceProps)\r\n      : getEstimatedTotalHeight(props, instanceProps);\r\n\r\n  const maxOffset = Math.max(\r\n    0,\r\n    Math.min(estimatedTotalSize - size, itemMetadata.offset)\r\n  );\r\n  const minOffset = Math.max(\r\n    0,\r\n    itemMetadata.offset - size + scrollbarSize + itemMetadata.size\r\n  );\r\n\r\n  if (align === 'smart') {\r\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\r\n      align = 'auto';\r\n    } else {\r\n      align = 'center';\r\n    }\r\n  }\r\n\r\n  switch (align) {\r\n    case 'start':\r\n      return maxOffset;\r\n    case 'end':\r\n      return minOffset;\r\n    case 'center':\r\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\r\n    case 'auto':\r\n    default:\r\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\r\n        return scrollOffset;\r\n      } else if (minOffset > maxOffset) {\r\n        // Because we only take into account the scrollbar size when calculating minOffset\r\n        // this value can be larger than maxOffset when at the end of the list\r\n        return minOffset;\r\n      } else if (scrollOffset < minOffset) {\r\n        return minOffset;\r\n      } else {\r\n        return maxOffset;\r\n      }\r\n  }\r\n};\r\n\r\nconst VariableSizeGrid = createGridComponent({\r\n  getColumnOffset: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => getItemMetadata('column', props, index, instanceProps).offset,\r\n\r\n  getColumnStartIndexForOffset: (\r\n    props: Props<any>,\r\n    scrollLeft: number,\r\n    instanceProps: InstanceProps\r\n  ): number => findNearestItem('column', props, instanceProps, scrollLeft),\r\n\r\n  getColumnStopIndexForStartIndex: (\r\n    props: Props<any>,\r\n    startIndex: number,\r\n    scrollLeft: number,\r\n    instanceProps: InstanceProps\r\n  ): number => {\r\n    const { columnCount, width } = props;\r\n\r\n    const itemMetadata = getItemMetadata(\r\n      'column',\r\n      props,\r\n      startIndex,\r\n      instanceProps\r\n    );\r\n    const maxOffset = scrollLeft + width;\r\n\r\n    let offset = itemMetadata.offset + itemMetadata.size;\r\n    let stopIndex = startIndex;\r\n\r\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\r\n      stopIndex++;\r\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\r\n    }\r\n\r\n    return stopIndex;\r\n  },\r\n\r\n  getColumnWidth: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => instanceProps.columnMetadataMap[index].size,\r\n\r\n  getEstimatedTotalHeight,\r\n  getEstimatedTotalWidth,\r\n\r\n  getOffsetForColumnAndAlignment: (\r\n    props: Props<any>,\r\n    index: number,\r\n    align: ScrollToAlign,\r\n    scrollOffset: number,\r\n    instanceProps: InstanceProps,\r\n    scrollbarSize: number\r\n  ): number =>\r\n    getOffsetForIndexAndAlignment(\r\n      'column',\r\n      props,\r\n      index,\r\n      align,\r\n      scrollOffset,\r\n      instanceProps,\r\n      scrollbarSize\r\n    ),\r\n\r\n  getOffsetForRowAndAlignment: (\r\n    props: Props<any>,\r\n    index: number,\r\n    align: ScrollToAlign,\r\n    scrollOffset: number,\r\n    instanceProps: InstanceProps,\r\n    scrollbarSize: number\r\n  ): number =>\r\n    getOffsetForIndexAndAlignment(\r\n      'row',\r\n      props,\r\n      index,\r\n      align,\r\n      scrollOffset,\r\n      instanceProps,\r\n      scrollbarSize\r\n    ),\r\n\r\n  getRowOffset: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => getItemMetadata('row', props, index, instanceProps).offset,\r\n\r\n  getRowHeight: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => instanceProps.rowMetadataMap[index].size,\r\n\r\n  getRowStartIndexForOffset: (\r\n    props: Props<any>,\r\n    scrollTop: number,\r\n    instanceProps: InstanceProps\r\n  ): number => findNearestItem('row', props, instanceProps, scrollTop),\r\n\r\n  getRowStopIndexForStartIndex: (\r\n    props: Props<any>,\r\n    startIndex: number,\r\n    scrollTop: number,\r\n    instanceProps: InstanceProps\r\n  ): number => {\r\n    const { rowCount, height } = props;\r\n\r\n    const itemMetadata = getItemMetadata(\r\n      'row',\r\n      props,\r\n      startIndex,\r\n      instanceProps\r\n    );\r\n    const maxOffset = scrollTop + height;\r\n\r\n    let offset = itemMetadata.offset + itemMetadata.size;\r\n    let stopIndex = startIndex;\r\n\r\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\r\n      stopIndex++;\r\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\r\n    }\r\n\r\n    return stopIndex;\r\n  },\r\n\r\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\r\n    const {\r\n      estimatedColumnWidth,\r\n      estimatedRowHeight,\r\n    } = ((props: any): VariableSizeProps);\r\n\r\n    const instanceProps = {\r\n      columnMetadataMap: {},\r\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\r\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\r\n      lastMeasuredColumnIndex: -1,\r\n      lastMeasuredRowIndex: -1,\r\n      rowMetadataMap: {},\r\n    };\r\n\r\n    instance.resetAfterColumnIndex = (\r\n      columnIndex: number,\r\n      shouldForceUpdate?: boolean = true\r\n    ) => {\r\n      instance.resetAfterIndices({ columnIndex, shouldForceUpdate });\r\n    };\r\n\r\n    instance.resetAfterRowIndex = (\r\n      rowIndex: number,\r\n      shouldForceUpdate?: boolean = true\r\n    ) => {\r\n      instance.resetAfterIndices({ rowIndex, shouldForceUpdate });\r\n    };\r\n\r\n    instance.resetAfterIndices = ({\r\n      columnIndex,\r\n      rowIndex,\r\n      shouldForceUpdate = true,\r\n    }: {\r\n      columnIndex?: number,\r\n      rowIndex?: number,\r\n      shouldForceUpdate: boolean,\r\n    }) => {\r\n      if (typeof columnIndex === 'number') {\r\n        instanceProps.lastMeasuredColumnIndex = Math.min(\r\n          instanceProps.lastMeasuredColumnIndex,\r\n          columnIndex - 1\r\n        );\r\n      }\r\n      if (typeof rowIndex === 'number') {\r\n        instanceProps.lastMeasuredRowIndex = Math.min(\r\n          instanceProps.lastMeasuredRowIndex,\r\n          rowIndex - 1\r\n        );\r\n      }\r\n\r\n      // We could potentially optimize further by only evicting styles after this index,\r\n      // But since styles are only cached while scrolling is in progress-\r\n      // It seems an unnecessary optimization.\r\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\r\n      instance._getItemStyleCache(-1);\r\n\r\n      if (shouldForceUpdate) {\r\n        instance.forceUpdate();\r\n      }\r\n    };\r\n\r\n    return instanceProps;\r\n  },\r\n\r\n  shouldResetStyleCacheOnItemSizeChange: false,\r\n\r\n  validateProps: ({ columnWidth, rowHeight }: Props<any>): void => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (typeof columnWidth !== 'function') {\r\n        throw Error(\r\n          'An invalid \"columnWidth\" prop has been specified. ' +\r\n            'Value should be a function. ' +\r\n            `\"${\r\n              columnWidth === null ? 'null' : typeof columnWidth\r\n            }\" was specified.`\r\n        );\r\n      } else if (typeof rowHeight !== 'function') {\r\n        throw Error(\r\n          'An invalid \"rowHeight\" prop has been specified. ' +\r\n            'Value should be a function. ' +\r\n            `\"${rowHeight === null ? 'null' : typeof rowHeight}\" was specified.`\r\n        );\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default VariableSizeGrid;\r\n","// @flow\r\n\r\nimport memoizeOne from 'memoize-one';\r\nimport { createElement, PureComponent } from 'react';\r\nimport { cancelTimeout, requestTimeout } from './timer';\r\nimport { getRTLOffsetType } from './domHelpers';\r\n\r\nimport type { TimeoutID } from './timer';\r\n\r\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\r\n\r\ntype itemSize = number | ((index: number) => number);\r\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\r\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\r\ntype Layout = 'horizontal' | 'vertical';\r\n\r\ntype RenderComponentProps<T> = {|\r\n  data: T,\r\n  index: number,\r\n  isScrolling?: boolean,\r\n  style: Object,\r\n|};\r\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\r\n\r\ntype ScrollDirection = 'forward' | 'backward';\r\n\r\ntype onItemsRenderedCallback = ({\r\n  overscanStartIndex: number,\r\n  overscanStopIndex: number,\r\n  visibleStartIndex: number,\r\n  visibleStopIndex: number,\r\n}) => void;\r\ntype onScrollCallback = ({\r\n  scrollDirection: ScrollDirection,\r\n  scrollOffset: number,\r\n  scrollUpdateWasRequested: boolean,\r\n}) => void;\r\n\r\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\r\ntype ItemStyleCache = { [index: number]: Object };\r\n\r\ntype OuterProps = {|\r\n  children: React$Node,\r\n  className: string | void,\r\n  onScroll: ScrollEvent => void,\r\n  style: {\r\n    [string]: mixed,\r\n  },\r\n|};\r\n\r\ntype InnerProps = {|\r\n  children: React$Node,\r\n  style: {\r\n    [string]: mixed,\r\n  },\r\n|};\r\n\r\nexport type Props<T> = {|\r\n  children: RenderComponent<T>,\r\n  className?: string,\r\n  direction: Direction,\r\n  height: number | string,\r\n  initialScrollOffset?: number,\r\n  innerRef?: any,\r\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\r\n  innerTagName?: string, // deprecated\r\n  itemCount: number,\r\n  itemData: T,\r\n  itemKey?: (index: number, data: T) => any,\r\n  itemSize: itemSize,\r\n  layout: Layout,\r\n  onItemsRendered?: onItemsRenderedCallback,\r\n  onScroll?: onScrollCallback,\r\n  outerRef?: any,\r\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\r\n  outerTagName?: string, // deprecated\r\n  overscanCount: number,\r\n  style?: Object,\r\n  useIsScrolling: boolean,\r\n  width: number | string,\r\n|};\r\n\r\ntype State = {|\r\n  instance: any,\r\n  isScrolling: boolean,\r\n  scrollDirection: ScrollDirection,\r\n  scrollOffset: number,\r\n  scrollUpdateWasRequested: boolean,\r\n|};\r\n\r\ntype GetItemOffset = (\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: any\r\n) => number;\r\ntype GetItemSize = (\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: any\r\n) => number;\r\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\r\ntype GetOffsetForIndexAndAlignment = (\r\n  props: Props<any>,\r\n  index: number,\r\n  align: ScrollToAlign,\r\n  scrollOffset: number,\r\n  instanceProps: any\r\n) => number;\r\ntype GetStartIndexForOffset = (\r\n  props: Props<any>,\r\n  offset: number,\r\n  instanceProps: any\r\n) => number;\r\ntype GetStopIndexForStartIndex = (\r\n  props: Props<any>,\r\n  startIndex: number,\r\n  scrollOffset: number,\r\n  instanceProps: any\r\n) => number;\r\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\r\ntype ValidateProps = (props: Props<any>) => void;\r\n\r\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\r\n\r\nconst defaultItemKey = (index: number, data: any) => index;\r\n\r\n// In DEV mode, this Set helps us only log a warning once per component instance.\r\n// This avoids spamming the console every time a render happens.\r\nlet devWarningsDirection = null;\r\nlet devWarningsTagName = null;\r\nif (process.env.NODE_ENV !== 'production') {\r\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\r\n    devWarningsDirection = new WeakSet();\r\n    devWarningsTagName = new WeakSet();\r\n  }\r\n}\r\n\r\nexport default function createListComponent({\r\n  getItemOffset,\r\n  getEstimatedTotalSize,\r\n  getItemSize,\r\n  getOffsetForIndexAndAlignment,\r\n  getStartIndexForOffset,\r\n  getStopIndexForStartIndex,\r\n  initInstanceProps,\r\n  shouldResetStyleCacheOnItemSizeChange,\r\n  validateProps,\r\n}: {|\r\n  getItemOffset: GetItemOffset,\r\n  getEstimatedTotalSize: GetEstimatedTotalSize,\r\n  getItemSize: GetItemSize,\r\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\r\n  getStartIndexForOffset: GetStartIndexForOffset,\r\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\r\n  initInstanceProps: InitInstanceProps,\r\n  shouldResetStyleCacheOnItemSizeChange: boolean,\r\n  validateProps: ValidateProps,\r\n|}) {\r\n  return class List<T> extends PureComponent<Props<T>, State> {\r\n    _instanceProps: any = initInstanceProps(this.props, this);\r\n    _outerRef: ?HTMLDivElement;\r\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\r\n\r\n    static defaultProps = {\r\n      direction: 'ltr',\r\n      itemData: undefined,\r\n      layout: 'vertical',\r\n      overscanCount: 2,\r\n      useIsScrolling: false,\r\n    };\r\n\r\n    state: State = {\r\n      instance: this,\r\n      isScrolling: false,\r\n      scrollDirection: 'forward',\r\n      scrollOffset:\r\n        typeof this.props.initialScrollOffset === 'number'\r\n          ? this.props.initialScrollOffset\r\n          : 0,\r\n      scrollUpdateWasRequested: false,\r\n    };\r\n\r\n    // Always use explicit constructor for React components.\r\n    // It produces less code after transpilation. (#26)\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props: Props<T>) {\r\n      super(props);\r\n    }\r\n\r\n    static getDerivedStateFromProps(\r\n      nextProps: Props<T>,\r\n      prevState: State\r\n    ): $Shape<State> | null {\r\n      validateSharedProps(nextProps, prevState);\r\n      validateProps(nextProps);\r\n      return null;\r\n    }\r\n\r\n    scrollTo(scrollOffset: number): void {\r\n      scrollOffset = Math.max(0, scrollOffset);\r\n\r\n      this.setState(prevState => {\r\n        if (prevState.scrollOffset === scrollOffset) {\r\n          return null;\r\n        }\r\n        return {\r\n          scrollDirection:\r\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\r\n          scrollOffset: scrollOffset,\r\n          scrollUpdateWasRequested: true,\r\n        };\r\n      }, this._resetIsScrollingDebounced);\r\n    }\r\n\r\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\r\n      const { itemCount } = this.props;\r\n      const { scrollOffset } = this.state;\r\n\r\n      index = Math.max(0, Math.min(index, itemCount - 1));\r\n\r\n      this.scrollTo(\r\n        getOffsetForIndexAndAlignment(\r\n          this.props,\r\n          index,\r\n          align,\r\n          scrollOffset,\r\n          this._instanceProps\r\n        )\r\n      );\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { direction, initialScrollOffset, layout } = this.props;\r\n\r\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\r\n        const outerRef = ((this._outerRef: any): HTMLElement);\r\n        // TODO Deprecate direction \"horizontal\"\r\n        if (direction === 'horizontal' || layout === 'horizontal') {\r\n          outerRef.scrollLeft = initialScrollOffset;\r\n        } else {\r\n          outerRef.scrollTop = initialScrollOffset;\r\n        }\r\n      }\r\n\r\n      this._callPropsCallbacks();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      const { direction, layout } = this.props;\r\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\r\n\r\n      if (scrollUpdateWasRequested && this._outerRef != null) {\r\n        const outerRef = ((this._outerRef: any): HTMLElement);\r\n\r\n        // TODO Deprecate direction \"horizontal\"\r\n        if (direction === 'horizontal' || layout === 'horizontal') {\r\n          if (direction === 'rtl') {\r\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\r\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\r\n            switch (getRTLOffsetType()) {\r\n              case 'negative':\r\n                outerRef.scrollLeft = -scrollOffset;\r\n                break;\r\n              case 'positive-ascending':\r\n                outerRef.scrollLeft = scrollOffset;\r\n                break;\r\n              default:\r\n                const { clientWidth, scrollWidth } = outerRef;\r\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\r\n                break;\r\n            }\r\n          } else {\r\n            outerRef.scrollLeft = scrollOffset;\r\n          }\r\n        } else {\r\n          outerRef.scrollTop = scrollOffset;\r\n        }\r\n      }\r\n\r\n      this._callPropsCallbacks();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if (this._resetIsScrollingTimeoutId !== null) {\r\n        cancelTimeout(this._resetIsScrollingTimeoutId);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        children,\r\n        className,\r\n        direction,\r\n        height,\r\n        innerRef,\r\n        innerElementType,\r\n        innerTagName,\r\n        itemCount,\r\n        itemData,\r\n        itemKey = defaultItemKey,\r\n        layout,\r\n        outerElementType,\r\n        outerTagName,\r\n        style,\r\n        useIsScrolling,\r\n        width,\r\n      } = this.props;\r\n      const { isScrolling } = this.state;\r\n\r\n      // TODO Deprecate direction \"horizontal\"\r\n      const isHorizontal =\r\n        direction === 'horizontal' || layout === 'horizontal';\r\n\r\n      const onScroll = isHorizontal\r\n        ? this._onScrollHorizontal\r\n        : this._onScrollVertical;\r\n\r\n      const [startIndex, stopIndex] = this._getRangeToRender();\r\n\r\n      const items = [];\r\n      if (itemCount > 0) {\r\n        for (let index = startIndex; index <= stopIndex; index++) {\r\n          items.push(\r\n            createElement(children, {\r\n              data: itemData,\r\n              key: itemKey(index, itemData),\r\n              index,\r\n              isScrolling: useIsScrolling ? isScrolling : undefined,\r\n              style: this._getItemStyle(index),\r\n            })\r\n          );\r\n        }\r\n      }\r\n\r\n      // Read this value AFTER items have been created,\r\n      // So their actual sizes (if variable) are taken into consideration.\r\n      const estimatedTotalSize = getEstimatedTotalSize(\r\n        this.props,\r\n        this._instanceProps\r\n      );\r\n\r\n      return createElement(\r\n        outerElementType || outerTagName || 'div',\r\n        {\r\n          className,\r\n          onScroll,\r\n          ref: this._outerRefSetter,\r\n          style: {\r\n            position: 'relative',\r\n            height,\r\n            width,\r\n            overflow: 'auto',\r\n            WebkitOverflowScrolling: 'touch',\r\n            willChange: 'transform',\r\n            direction,\r\n            ...style,\r\n          },\r\n        },\r\n        createElement(innerElementType || innerTagName || 'div', {\r\n          children: items,\r\n          ref: innerRef,\r\n          style: {\r\n            height: isHorizontal ? '100%' : estimatedTotalSize,\r\n            pointerEvents: isScrolling ? 'none' : undefined,\r\n            width: isHorizontal ? estimatedTotalSize : '100%',\r\n          },\r\n        })\r\n      );\r\n    }\r\n\r\n    _callOnItemsRendered: (\r\n      overscanStartIndex: number,\r\n      overscanStopIndex: number,\r\n      visibleStartIndex: number,\r\n      visibleStopIndex: number\r\n    ) => void;\r\n    _callOnItemsRendered = memoizeOne(\r\n      (\r\n        overscanStartIndex: number,\r\n        overscanStopIndex: number,\r\n        visibleStartIndex: number,\r\n        visibleStopIndex: number\r\n      ) =>\r\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\r\n          overscanStartIndex,\r\n          overscanStopIndex,\r\n          visibleStartIndex,\r\n          visibleStopIndex,\r\n        })\r\n    );\r\n\r\n    _callOnScroll: (\r\n      scrollDirection: ScrollDirection,\r\n      scrollOffset: number,\r\n      scrollUpdateWasRequested: boolean\r\n    ) => void;\r\n    _callOnScroll = memoizeOne(\r\n      (\r\n        scrollDirection: ScrollDirection,\r\n        scrollOffset: number,\r\n        scrollUpdateWasRequested: boolean\r\n      ) =>\r\n        ((this.props.onScroll: any): onScrollCallback)({\r\n          scrollDirection,\r\n          scrollOffset,\r\n          scrollUpdateWasRequested,\r\n        })\r\n    );\r\n\r\n    _callPropsCallbacks() {\r\n      if (typeof this.props.onItemsRendered === 'function') {\r\n        const { itemCount } = this.props;\r\n        if (itemCount > 0) {\r\n          const [\r\n            overscanStartIndex,\r\n            overscanStopIndex,\r\n            visibleStartIndex,\r\n            visibleStopIndex,\r\n          ] = this._getRangeToRender();\r\n          this._callOnItemsRendered(\r\n            overscanStartIndex,\r\n            overscanStopIndex,\r\n            visibleStartIndex,\r\n            visibleStopIndex\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeof this.props.onScroll === 'function') {\r\n        const {\r\n          scrollDirection,\r\n          scrollOffset,\r\n          scrollUpdateWasRequested,\r\n        } = this.state;\r\n        this._callOnScroll(\r\n          scrollDirection,\r\n          scrollOffset,\r\n          scrollUpdateWasRequested\r\n        );\r\n      }\r\n    }\r\n\r\n    // Lazily create and cache item styles while scrolling,\r\n    // So that pure component sCU will prevent re-renders.\r\n    // We maintain this cache, and pass a style prop rather than index,\r\n    // So that List can clear cached styles and force item re-render if necessary.\r\n    _getItemStyle: (index: number) => Object;\r\n    _getItemStyle = (index: number): Object => {\r\n      const { direction, itemSize, layout } = this.props;\r\n\r\n      const itemStyleCache = this._getItemStyleCache(\r\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\r\n        shouldResetStyleCacheOnItemSizeChange && layout,\r\n        shouldResetStyleCacheOnItemSizeChange && direction\r\n      );\r\n\r\n      let style;\r\n      if (itemStyleCache.hasOwnProperty(index)) {\r\n        style = itemStyleCache[index];\r\n      } else {\r\n        const offset = getItemOffset(this.props, index, this._instanceProps);\r\n        const size = getItemSize(this.props, index, this._instanceProps);\r\n\r\n        // TODO Deprecate direction \"horizontal\"\r\n        const isHorizontal =\r\n          direction === 'horizontal' || layout === 'horizontal';\r\n\r\n        const isRtl = direction === 'rtl';\r\n        const offsetHorizontal = isHorizontal ? offset : 0;\r\n        itemStyleCache[index] = style = {\r\n          position: 'absolute',\r\n          left: isRtl ? undefined : offsetHorizontal,\r\n          right: isRtl ? offsetHorizontal : undefined,\r\n          top: !isHorizontal ? offset : 0,\r\n          height: !isHorizontal ? size : '100%',\r\n          width: isHorizontal ? size : '100%',\r\n        };\r\n      }\r\n\r\n      return style;\r\n    };\r\n\r\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\r\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\r\n\r\n    _getRangeToRender(): [number, number, number, number] {\r\n      const { itemCount, overscanCount } = this.props;\r\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\r\n\r\n      if (itemCount === 0) {\r\n        return [0, 0, 0, 0];\r\n      }\r\n\r\n      const startIndex = getStartIndexForOffset(\r\n        this.props,\r\n        scrollOffset,\r\n        this._instanceProps\r\n      );\r\n      const stopIndex = getStopIndexForStartIndex(\r\n        this.props,\r\n        startIndex,\r\n        scrollOffset,\r\n        this._instanceProps\r\n      );\r\n\r\n      // Overscan by one item in each direction so that tab/focus works.\r\n      // If there isn't at least one extra item, tab loops back around.\r\n      const overscanBackward =\r\n        !isScrolling || scrollDirection === 'backward'\r\n          ? Math.max(1, overscanCount)\r\n          : 1;\r\n      const overscanForward =\r\n        !isScrolling || scrollDirection === 'forward'\r\n          ? Math.max(1, overscanCount)\r\n          : 1;\r\n\r\n      return [\r\n        Math.max(0, startIndex - overscanBackward),\r\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\r\n        startIndex,\r\n        stopIndex,\r\n      ];\r\n    }\r\n\r\n    _onScrollHorizontal = (event: ScrollEvent): void => {\r\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\r\n      this.setState(prevState => {\r\n        if (prevState.scrollOffset === scrollLeft) {\r\n          // Scroll position may have been updated by cDM/cDU,\r\n          // In which case we don't need to trigger another render,\r\n          // And we don't want to update state.isScrolling.\r\n          return null;\r\n        }\r\n\r\n        const { direction } = this.props;\r\n\r\n        let scrollOffset = scrollLeft;\r\n        if (direction === 'rtl') {\r\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\r\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\r\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\r\n          switch (getRTLOffsetType()) {\r\n            case 'negative':\r\n              scrollOffset = -scrollLeft;\r\n              break;\r\n            case 'positive-descending':\r\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\r\n              break;\r\n          }\r\n        }\r\n\r\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\r\n        scrollOffset = Math.max(\r\n          0,\r\n          Math.min(scrollOffset, scrollWidth - clientWidth)\r\n        );\r\n\r\n        return {\r\n          isScrolling: true,\r\n          scrollDirection:\r\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\r\n          scrollOffset,\r\n          scrollUpdateWasRequested: false,\r\n        };\r\n      }, this._resetIsScrollingDebounced);\r\n    };\r\n\r\n    _onScrollVertical = (event: ScrollEvent): void => {\r\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\r\n      this.setState(prevState => {\r\n        if (prevState.scrollOffset === scrollTop) {\r\n          // Scroll position may have been updated by cDM/cDU,\r\n          // In which case we don't need to trigger another render,\r\n          // And we don't want to update state.isScrolling.\r\n          return null;\r\n        }\r\n\r\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\r\n        const scrollOffset = Math.max(\r\n          0,\r\n          Math.min(scrollTop, scrollHeight - clientHeight)\r\n        );\r\n\r\n        return {\r\n          isScrolling: true,\r\n          scrollDirection:\r\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\r\n          scrollOffset,\r\n          scrollUpdateWasRequested: false,\r\n        };\r\n      }, this._resetIsScrollingDebounced);\r\n    };\r\n\r\n    _outerRefSetter = (ref: any): void => {\r\n      const { outerRef } = this.props;\r\n\r\n      this._outerRef = ((ref: any): HTMLDivElement);\r\n\r\n      if (typeof outerRef === 'function') {\r\n        outerRef(ref);\r\n      } else if (\r\n        outerRef != null &&\r\n        typeof outerRef === 'object' &&\r\n        outerRef.hasOwnProperty('current')\r\n      ) {\r\n        outerRef.current = ref;\r\n      }\r\n    };\r\n\r\n    _resetIsScrollingDebounced = () => {\r\n      if (this._resetIsScrollingTimeoutId !== null) {\r\n        cancelTimeout(this._resetIsScrollingTimeoutId);\r\n      }\r\n\r\n      this._resetIsScrollingTimeoutId = requestTimeout(\r\n        this._resetIsScrolling,\r\n        IS_SCROLLING_DEBOUNCE_INTERVAL\r\n      );\r\n    };\r\n\r\n    _resetIsScrolling = () => {\r\n      this._resetIsScrollingTimeoutId = null;\r\n\r\n      this.setState({ isScrolling: false }, () => {\r\n        // Clear style cache after state update has been committed.\r\n        // This way we don't break pure sCU for items that don't use isScrolling param.\r\n        this._getItemStyleCache(-1, null);\r\n      });\r\n    };\r\n  };\r\n}\r\n\r\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\r\n// This would avoid ever calling the render function for the same index more than once,\r\n// But it would also add the overhead of a lot of components/fibers.\r\n// I assume people already do this (render function returning a class component),\r\n// So my doing it would just unnecessarily double the wrappers.\r\n\r\nconst validateSharedProps = (\r\n  {\r\n    children,\r\n    direction,\r\n    height,\r\n    layout,\r\n    innerTagName,\r\n    outerTagName,\r\n    width,\r\n  }: Props<any>,\r\n  { instance }: State\r\n): void => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (innerTagName != null || outerTagName != null) {\r\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\r\n        devWarningsTagName.add(instance);\r\n        console.warn(\r\n          'The innerTagName and outerTagName props have been deprecated. ' +\r\n            'Please use the innerElementType and outerElementType props instead.'\r\n        );\r\n      }\r\n    }\r\n\r\n    // TODO Deprecate direction \"horizontal\"\r\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\r\n\r\n    switch (direction) {\r\n      case 'horizontal':\r\n      case 'vertical':\r\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\r\n          devWarningsDirection.add(instance);\r\n          console.warn(\r\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\r\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\r\n          );\r\n        }\r\n        break;\r\n      case 'ltr':\r\n      case 'rtl':\r\n        // Valid values\r\n        break;\r\n      default:\r\n        throw Error(\r\n          'An invalid \"direction\" prop has been specified. ' +\r\n            'Value should be either \"ltr\" or \"rtl\". ' +\r\n            `\"${direction}\" was specified.`\r\n        );\r\n    }\r\n\r\n    switch (layout) {\r\n      case 'horizontal':\r\n      case 'vertical':\r\n        // Valid values\r\n        break;\r\n      default:\r\n        throw Error(\r\n          'An invalid \"layout\" prop has been specified. ' +\r\n            'Value should be either \"horizontal\" or \"vertical\". ' +\r\n            `\"${layout}\" was specified.`\r\n        );\r\n    }\r\n\r\n    if (children == null) {\r\n      throw Error(\r\n        'An invalid \"children\" prop has been specified. ' +\r\n          'Value should be a React component. ' +\r\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\r\n      );\r\n    }\r\n\r\n    if (isHorizontal && typeof width !== 'number') {\r\n      throw Error(\r\n        'An invalid \"width\" prop has been specified. ' +\r\n          'Horizontal lists must specify a number for width. ' +\r\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\r\n      );\r\n    } else if (!isHorizontal && typeof height !== 'number') {\r\n      throw Error(\r\n        'An invalid \"height\" prop has been specified. ' +\r\n          'Vertical lists must specify a number for height. ' +\r\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\r\n      );\r\n    }\r\n  }\r\n};\r\n","// @flow\r\n\r\nimport createListComponent from './createListComponent';\r\n\r\nimport type { Props, ScrollToAlign } from './createListComponent';\r\n\r\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\r\n\r\ntype VariableSizeProps = {|\r\n  estimatedItemSize: number,\r\n  ...Props<any>,\r\n|};\r\n\r\ntype itemSizeGetter = (index: number) => number;\r\n\r\ntype ItemMetadata = {|\r\n  offset: number,\r\n  size: number,\r\n|};\r\ntype InstanceProps = {|\r\n  itemMetadataMap: { [index: number]: ItemMetadata },\r\n  estimatedItemSize: number,\r\n  lastMeasuredIndex: number,\r\n|};\r\n\r\nconst getItemMetadata = (\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: InstanceProps\r\n): ItemMetadata => {\r\n  const { itemSize } = ((props: any): VariableSizeProps);\r\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\r\n\r\n  if (index > lastMeasuredIndex) {\r\n    let offset = 0;\r\n    if (lastMeasuredIndex >= 0) {\r\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\r\n      offset = itemMetadata.offset + itemMetadata.size;\r\n    }\r\n\r\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\r\n      let size = ((itemSize: any): itemSizeGetter)(i);\r\n\r\n      itemMetadataMap[i] = {\r\n        offset,\r\n        size,\r\n      };\r\n\r\n      offset += size;\r\n    }\r\n\r\n    instanceProps.lastMeasuredIndex = index;\r\n  }\r\n\r\n  return itemMetadataMap[index];\r\n};\r\n\r\nconst findNearestItem = (\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  offset: number\r\n) => {\r\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\r\n\r\n  const lastMeasuredItemOffset =\r\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\r\n\r\n  if (lastMeasuredItemOffset >= offset) {\r\n    // If we've already measured items within this range just use a binary search as it's faster.\r\n    return findNearestItemBinarySearch(\r\n      props,\r\n      instanceProps,\r\n      lastMeasuredIndex,\r\n      0,\r\n      offset\r\n    );\r\n  } else {\r\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\r\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\r\n    // The overall complexity for this approach is O(log n).\r\n    return findNearestItemExponentialSearch(\r\n      props,\r\n      instanceProps,\r\n      Math.max(0, lastMeasuredIndex),\r\n      offset\r\n    );\r\n  }\r\n};\r\n\r\nconst findNearestItemBinarySearch = (\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  high: number,\r\n  low: number,\r\n  offset: number\r\n): number => {\r\n  while (low <= high) {\r\n    const middle = low + Math.floor((high - low) / 2);\r\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\r\n\r\n    if (currentOffset === offset) {\r\n      return middle;\r\n    } else if (currentOffset < offset) {\r\n      low = middle + 1;\r\n    } else if (currentOffset > offset) {\r\n      high = middle - 1;\r\n    }\r\n  }\r\n\r\n  if (low > 0) {\r\n    return low - 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nconst findNearestItemExponentialSearch = (\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  index: number,\r\n  offset: number\r\n): number => {\r\n  const { itemCount } = props;\r\n  let interval = 1;\r\n\r\n  while (\r\n    index < itemCount &&\r\n    getItemMetadata(props, index, instanceProps).offset < offset\r\n  ) {\r\n    index += interval;\r\n    interval *= 2;\r\n  }\r\n\r\n  return findNearestItemBinarySearch(\r\n    props,\r\n    instanceProps,\r\n    Math.min(index, itemCount - 1),\r\n    Math.floor(index / 2),\r\n    offset\r\n  );\r\n};\r\n\r\nconst getEstimatedTotalSize = (\r\n  { itemCount }: Props<any>,\r\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\r\n) => {\r\n  let totalSizeOfMeasuredItems = 0;\r\n\r\n  // Edge case check for when the number of items decreases while a scroll is in progress.\r\n  // https://github.com/bvaughn/react-window/pull/138\r\n  if (lastMeasuredIndex >= itemCount) {\r\n    lastMeasuredIndex = itemCount - 1;\r\n  }\r\n\r\n  if (lastMeasuredIndex >= 0) {\r\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\r\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\r\n  }\r\n\r\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\r\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\r\n\r\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\r\n};\r\n\r\nconst VariableSizeList = createListComponent({\r\n  getItemOffset: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => getItemMetadata(props, index, instanceProps).offset,\r\n\r\n  getItemSize: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => instanceProps.itemMetadataMap[index].size,\r\n\r\n  getEstimatedTotalSize,\r\n\r\n  getOffsetForIndexAndAlignment: (\r\n    props: Props<any>,\r\n    index: number,\r\n    align: ScrollToAlign,\r\n    scrollOffset: number,\r\n    instanceProps: InstanceProps\r\n  ): number => {\r\n    const { direction, height, layout, width } = props;\r\n\r\n    // TODO Deprecate direction \"horizontal\"\r\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\r\n    const size = (((isHorizontal ? width : height): any): number);\r\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\r\n\r\n    // Get estimated total size after ItemMetadata is computed,\r\n    // To ensure it reflects actual measurements instead of just estimates.\r\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\r\n\r\n    const maxOffset = Math.max(\r\n      0,\r\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\r\n    );\r\n    const minOffset = Math.max(\r\n      0,\r\n      itemMetadata.offset - size + itemMetadata.size\r\n    );\r\n\r\n    if (align === 'smart') {\r\n      if (\r\n        scrollOffset >= minOffset - size &&\r\n        scrollOffset <= maxOffset + size\r\n      ) {\r\n        align = 'auto';\r\n      } else {\r\n        align = 'center';\r\n      }\r\n    }\r\n\r\n    switch (align) {\r\n      case 'start':\r\n        return maxOffset;\r\n      case 'end':\r\n        return minOffset;\r\n      case 'center':\r\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\r\n      case 'auto':\r\n      default:\r\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\r\n          return scrollOffset;\r\n        } else if (scrollOffset < minOffset) {\r\n          return minOffset;\r\n        } else {\r\n          return maxOffset;\r\n        }\r\n    }\r\n  },\r\n\r\n  getStartIndexForOffset: (\r\n    props: Props<any>,\r\n    offset: number,\r\n    instanceProps: InstanceProps\r\n  ): number => findNearestItem(props, instanceProps, offset),\r\n\r\n  getStopIndexForStartIndex: (\r\n    props: Props<any>,\r\n    startIndex: number,\r\n    scrollOffset: number,\r\n    instanceProps: InstanceProps\r\n  ): number => {\r\n    const { direction, height, itemCount, layout, width } = props;\r\n\r\n    // TODO Deprecate direction \"horizontal\"\r\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\r\n    const size = (((isHorizontal ? width : height): any): number);\r\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\r\n    const maxOffset = scrollOffset + size;\r\n\r\n    let offset = itemMetadata.offset + itemMetadata.size;\r\n    let stopIndex = startIndex;\r\n\r\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\r\n      stopIndex++;\r\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\r\n    }\r\n\r\n    return stopIndex;\r\n  },\r\n\r\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\r\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\r\n\r\n    const instanceProps = {\r\n      itemMetadataMap: {},\r\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\r\n      lastMeasuredIndex: -1,\r\n    };\r\n\r\n    instance.resetAfterIndex = (\r\n      index: number,\r\n      shouldForceUpdate?: boolean = true\r\n    ) => {\r\n      instanceProps.lastMeasuredIndex = Math.min(\r\n        instanceProps.lastMeasuredIndex,\r\n        index - 1\r\n      );\r\n\r\n      // We could potentially optimize further by only evicting styles after this index,\r\n      // But since styles are only cached while scrolling is in progress-\r\n      // It seems an unnecessary optimization.\r\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\r\n      instance._getItemStyleCache(-1);\r\n\r\n      if (shouldForceUpdate) {\r\n        instance.forceUpdate();\r\n      }\r\n    };\r\n\r\n    return instanceProps;\r\n  },\r\n\r\n  shouldResetStyleCacheOnItemSizeChange: false,\r\n\r\n  validateProps: ({ itemSize }: Props<any>): void => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (typeof itemSize !== 'function') {\r\n        throw Error(\r\n          'An invalid \"itemSize\" prop has been specified. ' +\r\n            'Value should be a function. ' +\r\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\r\n        );\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default VariableSizeList;\r\n","// @flow\r\n\r\nimport createGridComponent from './createGridComponent';\r\n\r\nimport type { Props, ScrollToAlign } from './createGridComponent';\r\n\r\nconst FixedSizeGrid = createGridComponent({\r\n  getColumnOffset: ({ columnWidth }: Props<any>, index: number): number =>\r\n    index * ((columnWidth: any): number),\r\n\r\n  getColumnWidth: ({ columnWidth }: Props<any>, index: number): number =>\r\n    ((columnWidth: any): number),\r\n\r\n  getRowOffset: ({ rowHeight }: Props<any>, index: number): number =>\r\n    index * ((rowHeight: any): number),\r\n\r\n  getRowHeight: ({ rowHeight }: Props<any>, index: number): number =>\r\n    ((rowHeight: any): number),\r\n\r\n  getEstimatedTotalHeight: ({ rowCount, rowHeight }: Props<any>) =>\r\n    ((rowHeight: any): number) * rowCount,\r\n\r\n  getEstimatedTotalWidth: ({ columnCount, columnWidth }: Props<any>) =>\r\n    ((columnWidth: any): number) * columnCount,\r\n\r\n  getOffsetForColumnAndAlignment: (\r\n    { columnCount, columnWidth, width }: Props<any>,\r\n    columnIndex: number,\r\n    align: ScrollToAlign,\r\n    scrollLeft: number,\r\n    instanceProps: typeof undefined,\r\n    scrollbarSize: number\r\n  ): number => {\r\n    const lastColumnOffset = Math.max(\r\n      0,\r\n      columnCount * ((columnWidth: any): number) - width\r\n    );\r\n    const maxOffset = Math.min(\r\n      lastColumnOffset,\r\n      columnIndex * ((columnWidth: any): number)\r\n    );\r\n    const minOffset = Math.max(\r\n      0,\r\n      columnIndex * ((columnWidth: any): number) -\r\n        width +\r\n        scrollbarSize +\r\n        ((columnWidth: any): number)\r\n    );\r\n\r\n    if (align === 'smart') {\r\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\r\n        align = 'auto';\r\n      } else {\r\n        align = 'center';\r\n      }\r\n    }\r\n\r\n    switch (align) {\r\n      case 'start':\r\n        return maxOffset;\r\n      case 'end':\r\n        return minOffset;\r\n      case 'center':\r\n        // \"Centered\" offset is usually the average of the min and max.\r\n        // But near the edges of the list, this doesn't hold true.\r\n        const middleOffset = Math.round(\r\n          minOffset + (maxOffset - minOffset) / 2\r\n        );\r\n        if (middleOffset < Math.ceil(width / 2)) {\r\n          return 0; // near the beginning\r\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\r\n          return lastColumnOffset; // near the end\r\n        } else {\r\n          return middleOffset;\r\n        }\r\n      case 'auto':\r\n      default:\r\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\r\n          return scrollLeft;\r\n        } else if (minOffset > maxOffset) {\r\n          // Because we only take into account the scrollbar size when calculating minOffset\r\n          // this value can be larger than maxOffset when at the end of the list\r\n          return minOffset;\r\n        } else if (scrollLeft < minOffset) {\r\n          return minOffset;\r\n        } else {\r\n          return maxOffset;\r\n        }\r\n    }\r\n  },\r\n\r\n  getOffsetForRowAndAlignment: (\r\n    { rowHeight, height, rowCount }: Props<any>,\r\n    rowIndex: number,\r\n    align: ScrollToAlign,\r\n    scrollTop: number,\r\n    instanceProps: typeof undefined,\r\n    scrollbarSize: number\r\n  ): number => {\r\n    const lastRowOffset = Math.max(\r\n      0,\r\n      rowCount * ((rowHeight: any): number) - height\r\n    );\r\n    const maxOffset = Math.min(\r\n      lastRowOffset,\r\n      rowIndex * ((rowHeight: any): number)\r\n    );\r\n    const minOffset = Math.max(\r\n      0,\r\n      rowIndex * ((rowHeight: any): number) -\r\n        height +\r\n        scrollbarSize +\r\n        ((rowHeight: any): number)\r\n    );\r\n\r\n    if (align === 'smart') {\r\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\r\n        align = 'auto';\r\n      } else {\r\n        align = 'center';\r\n      }\r\n    }\r\n\r\n    switch (align) {\r\n      case 'start':\r\n        return maxOffset;\r\n      case 'end':\r\n        return minOffset;\r\n      case 'center':\r\n        // \"Centered\" offset is usually the average of the min and max.\r\n        // But near the edges of the list, this doesn't hold true.\r\n        const middleOffset = Math.round(\r\n          minOffset + (maxOffset - minOffset) / 2\r\n        );\r\n        if (middleOffset < Math.ceil(height / 2)) {\r\n          return 0; // near the beginning\r\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\r\n          return lastRowOffset; // near the end\r\n        } else {\r\n          return middleOffset;\r\n        }\r\n      case 'auto':\r\n      default:\r\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\r\n          return scrollTop;\r\n        } else if (minOffset > maxOffset) {\r\n          // Because we only take into account the scrollbar size when calculating minOffset\r\n          // this value can be larger than maxOffset when at the end of the list\r\n          return minOffset;\r\n        } else if (scrollTop < minOffset) {\r\n          return minOffset;\r\n        } else {\r\n          return maxOffset;\r\n        }\r\n    }\r\n  },\r\n\r\n  getColumnStartIndexForOffset: (\r\n    { columnWidth, columnCount }: Props<any>,\r\n    scrollLeft: number\r\n  ): number =>\r\n    Math.max(\r\n      0,\r\n      Math.min(\r\n        columnCount - 1,\r\n        Math.floor(scrollLeft / ((columnWidth: any): number))\r\n      )\r\n    ),\r\n\r\n  getColumnStopIndexForStartIndex: (\r\n    { columnWidth, columnCount, width }: Props<any>,\r\n    startIndex: number,\r\n    scrollLeft: number\r\n  ): number => {\r\n    const left = startIndex * ((columnWidth: any): number);\r\n    const numVisibleColumns = Math.ceil(\r\n      (width + scrollLeft - left) / ((columnWidth: any): number)\r\n    );\r\n    return Math.max(\r\n      0,\r\n      Math.min(\r\n        columnCount - 1,\r\n        startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\r\n      )\r\n    );\r\n  },\r\n\r\n  getRowStartIndexForOffset: (\r\n    { rowHeight, rowCount }: Props<any>,\r\n    scrollTop: number\r\n  ): number =>\r\n    Math.max(\r\n      0,\r\n      Math.min(rowCount - 1, Math.floor(scrollTop / ((rowHeight: any): number)))\r\n    ),\r\n\r\n  getRowStopIndexForStartIndex: (\r\n    { rowHeight, rowCount, height }: Props<any>,\r\n    startIndex: number,\r\n    scrollTop: number\r\n  ): number => {\r\n    const top = startIndex * ((rowHeight: any): number);\r\n    const numVisibleRows = Math.ceil(\r\n      (height + scrollTop - top) / ((rowHeight: any): number)\r\n    );\r\n    return Math.max(\r\n      0,\r\n      Math.min(\r\n        rowCount - 1,\r\n        startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\r\n      )\r\n    );\r\n  },\r\n\r\n  initInstanceProps(props: Props<any>): any {\r\n    // Noop\r\n  },\r\n\r\n  shouldResetStyleCacheOnItemSizeChange: true,\r\n\r\n  validateProps: ({ columnWidth, rowHeight }: Props<any>): void => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (typeof columnWidth !== 'number') {\r\n        throw Error(\r\n          'An invalid \"columnWidth\" prop has been specified. ' +\r\n            'Value should be a number. ' +\r\n            `\"${\r\n              columnWidth === null ? 'null' : typeof columnWidth\r\n            }\" was specified.`\r\n        );\r\n      }\r\n\r\n      if (typeof rowHeight !== 'number') {\r\n        throw Error(\r\n          'An invalid \"rowHeight\" prop has been specified. ' +\r\n            'Value should be a number. ' +\r\n            `\"${rowHeight === null ? 'null' : typeof rowHeight}\" was specified.`\r\n        );\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default FixedSizeGrid;\r\n","// @flow\r\n\r\nimport createListComponent from './createListComponent';\r\n\r\nimport type { Props, ScrollToAlign } from './createListComponent';\r\n\r\nconst FixedSizeList = createListComponent({\r\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\r\n    index * ((itemSize: any): number),\r\n\r\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\r\n    ((itemSize: any): number),\r\n\r\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\r\n    ((itemSize: any): number) * itemCount,\r\n\r\n  getOffsetForIndexAndAlignment: (\r\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\r\n    index: number,\r\n    align: ScrollToAlign,\r\n    scrollOffset: number\r\n  ): number => {\r\n    // TODO Deprecate direction \"horizontal\"\r\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\r\n    const size = (((isHorizontal ? width : height): any): number);\r\n    const lastItemOffset = Math.max(\r\n      0,\r\n      itemCount * ((itemSize: any): number) - size\r\n    );\r\n    const maxOffset = Math.min(\r\n      lastItemOffset,\r\n      index * ((itemSize: any): number)\r\n    );\r\n    const minOffset = Math.max(\r\n      0,\r\n      index * ((itemSize: any): number) - size + ((itemSize: any): number)\r\n    );\r\n\r\n    if (align === 'smart') {\r\n      if (\r\n        scrollOffset >= minOffset - size &&\r\n        scrollOffset <= maxOffset + size\r\n      ) {\r\n        align = 'auto';\r\n      } else {\r\n        align = 'center';\r\n      }\r\n    }\r\n\r\n    switch (align) {\r\n      case 'start':\r\n        return maxOffset;\r\n      case 'end':\r\n        return minOffset;\r\n      case 'center': {\r\n        // \"Centered\" offset is usually the average of the min and max.\r\n        // But near the edges of the list, this doesn't hold true.\r\n        const middleOffset = Math.round(\r\n          minOffset + (maxOffset - minOffset) / 2\r\n        );\r\n        if (middleOffset < Math.ceil(size / 2)) {\r\n          return 0; // near the beginning\r\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\r\n          return lastItemOffset; // near the end\r\n        } else {\r\n          return middleOffset;\r\n        }\r\n      }\r\n      case 'auto':\r\n      default:\r\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\r\n          return scrollOffset;\r\n        } else if (scrollOffset < minOffset) {\r\n          return minOffset;\r\n        } else {\r\n          return maxOffset;\r\n        }\r\n    }\r\n  },\r\n\r\n  getStartIndexForOffset: (\r\n    { itemCount, itemSize }: Props<any>,\r\n    offset: number\r\n  ): number =>\r\n    Math.max(\r\n      0,\r\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\r\n    ),\r\n\r\n  getStopIndexForStartIndex: (\r\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\r\n    startIndex: number,\r\n    scrollOffset: number\r\n  ): number => {\r\n    // TODO Deprecate direction \"horizontal\"\r\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\r\n    const offset = startIndex * ((itemSize: any): number);\r\n    const size = (((isHorizontal ? width : height): any): number);\r\n    const numVisibleItems = Math.ceil(\r\n      (size + scrollOffset - offset) / ((itemSize: any): number)\r\n    );\r\n    return Math.max(\r\n      0,\r\n      Math.min(\r\n        itemCount - 1,\r\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\r\n      )\r\n    );\r\n  },\r\n\r\n  initInstanceProps(props: Props<any>): any {\r\n    // Noop\r\n  },\r\n\r\n  shouldResetStyleCacheOnItemSizeChange: true,\r\n\r\n  validateProps: ({ itemSize }: Props<any>): void => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (typeof itemSize !== 'number') {\r\n        throw Error(\r\n          'An invalid \"itemSize\" prop has been specified. ' +\r\n            'Value should be a number. ' +\r\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\r\n        );\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default FixedSizeList;\r\n","// @flow\r\n\r\n// Pulled from react-compat\r\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\r\nexport default function shallowDiffers(prev: Object, next: Object): boolean {\r\n  for (let attribute in prev) {\r\n    if (!(attribute in next)) {\r\n      return true;\r\n    }\r\n  }\r\n  for (let attribute in next) {\r\n    if (prev[attribute] !== next[attribute]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n","// @flow\r\n\r\nimport shallowDiffers from './shallowDiffers';\r\n\r\n// Custom comparison function for React.memo().\r\n// It knows to compare individual style props and ignore the wrapper object.\r\n// See https://reactjs.org/docs/react-api.html#reactmemo\r\nexport default function areEqual(\r\n  prevProps: Object,\r\n  nextProps: Object\r\n): boolean {\r\n  const { style: prevStyle, ...prevRest } = prevProps;\r\n  const { style: nextStyle, ...nextRest } = nextProps;\r\n\r\n  return (\r\n    !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest)\r\n  );\r\n}\r\n","// @flow\r\n\r\nimport areEqual from './areEqual';\r\nimport shallowDiffers from './shallowDiffers';\r\n\r\n// Custom shouldComponentUpdate for class components.\r\n// It knows to compare individual style props and ignore the wrapper object.\r\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\r\nexport default function shouldComponentUpdate(\r\n  nextProps: Object,\r\n  nextState: Object\r\n): boolean {\r\n  return (\r\n    !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState)\r\n  );\r\n}\r\n"],"names":["hasNativePerformanceNow","performance","now","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","requestTimeout","callback","delay","start","tick","call","requestAnimationFrame","size","getScrollbarSize","recalculate","div","document","createElement","style","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","IS_SCROLLING_DEBOUNCE_INTERVAL","defaultItemKey","columnIndex","data","rowIndex","devWarningsOverscanCount","devWarningsOverscanRowsColumnsCount","devWarningsTagName","process","env","NODE_ENV","window","WeakSet","createGridComponent","getColumnOffset","getColumnStartIndexForOffset","getColumnStopIndexForStartIndex","getColumnWidth","getEstimatedTotalHeight","getEstimatedTotalWidth","getOffsetForColumnAndAlignment","getOffsetForRowAndAlignment","getRowHeight","getRowOffset","getRowStartIndexForOffset","getRowStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","props","_instanceProps","_resetIsScrollingTimeoutId","_outerRef","state","instance","isScrolling","horizontalScrollDirection","initialScrollLeft","scrollTop","initialScrollTop","scrollUpdateWasRequested","verticalScrollDirection","_callOnItemsRendered","memoizeOne","overscanColumnStartIndex","overscanColumnStopIndex","overscanRowStartIndex","overscanRowStopIndex","visibleColumnStartIndex","visibleColumnStopIndex","visibleRowStartIndex","visibleRowStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","columnWidth","rowHeight","itemStyleCache","_getItemStyleCache","key","hasOwnProperty","offset","isRtl","position","left","undefined","right","top","_","__","___","_onScroll","event","currentTarget","clientHeight","scrollHeight","scrollWidth","setState","prevState","calculatedScrollLeft","Math","max","min","calculatedScrollTop","_resetIsScrollingDebounced","_outerRefSetter","ref","outerRef","current","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps","scrollTo","scrollToItem","align","columnCount","rowCount","scrollbarSize","estimatedTotalHeight","estimatedTotalWidth","horizontalScrollbarSize","verticalScrollbarSize","componentDidMount","_callPropsCallbacks","componentDidUpdate","isNegative","isRTLOffsetNegative","componentWillUnmount","render","children","className","innerRef","innerElementType","innerTagName","itemData","itemKey","outerElementType","outerTagName","useIsScrolling","extraBottomRightElement","extraBottomLeftElement","extraTopLeftElement","extraTopRightElement","freezeRowCount","freezeColumnCount","_getHorizontalRangeToRender","columnStartIndex","columnStopIndex","_getVerticalRangeToRender","rowStartIndex","rowStopIndex","items","freezeTopLeftItems","freezeTopRightItems","freezeBottomLeftItems","push","topLeftStyle","Object","assign","length","unshift","zIndex","background","outerElement","WebkitOverflowScrolling","willChange","pointerEvents","overscanColumnCount","overscanColumnsCount","overscanCount","overscanCountResolved","startIndex","stopIndex","overscanBackward","overscanForward","overscanRowCount","overscanRowsCount","PureComponent","defaultProps","has","add","console","warn","Error","DEFAULT_ESTIMATED_ITEM_SIZE","rowMetadataMap","estimatedRowHeight","lastMeasuredRowIndex","totalSizeOfMeasuredRows","itemMetadata","numUnmeasuredItems","totalSizeOfUnmeasuredItems","columnMetadataMap","estimatedColumnWidth","lastMeasuredColumnIndex","getItemMetadata","itemType","index","instanceProps","itemMetadataMap","itemSize","lastMeasuredIndex","i","findNearestItem","lastMeasuredItemOffset","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentOffset","itemCount","interval","getOffsetForIndexAndAlignment","scrollOffset","estimatedTotalSize","maxOffset","minOffset","round","VariableSizeGrid","resetAfterColumnIndex","shouldForceUpdate","resetAfterIndices","resetAfterRowIndex","forceUpdate","devWarningsDirection","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getStartIndexForOffset","getStopIndexForStartIndex","scrollDirection","initialScrollOffset","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","layout","isHorizontal","offsetHorizontal","_onScrollHorizontal","_onScrollVertical","_getRangeToRender","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","resetAfterIndex","FixedSizeGrid","lastColumnOffset","middleOffset","ceil","lastRowOffset","numVisibleColumns","numVisibleRows","FixedSizeList","lastItemOffset","numVisibleItems","shallowDiffers","prev","next","attribute","areEqual","prevProps","prevStyle","prevRest","nextStyle","nextRest","shouldComponentUpdate","nextState"],"mappings":"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"}